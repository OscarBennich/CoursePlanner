@model CoursePlanner.Models.Teacher

@{
    ViewBag.Title = Model.TeacherName;
}

<div class="row">
    <div class="col-md-4">
        <!-- Profile Image -->
        <div class="box box-danger">
            <div class="box-body box-profile">
                <h3 class="profile-username text-center">@Html.DisplayFor(model => model.TeacherName)</h3>
                <p class="text-muted text-center">@Html.DisplayFor(model => model.TeacherPosition)</p>
                <ul class="list-group list-group-unbordered">
                    <li class="list-group-item">
                        <b>Contract type</b> <a class="pull-right">@Html.DisplayFor(model => model.TeacherContractType)</a>
                    </li>
                    @if (Model.FixedContractEndDate != null)
                    {
                        <li class="list-group-item">
                            <b>Contract end date</b> <a class="pull-right">@Model.FixedContractEndDate.Value.ToString("yyyy/MM/dd")</a>
                        </li>
                    }
                    <li class="list-group-item">
                        <b>Total percentage fall</b> <a class="pull-right">@Convert.ToDouble(Model.TotalPercentageFall.Value * 100)%</a>
                    </li>
                    <li class="list-group-item">
                        <b>Total percentage spring</b> <a class="pull-right">@Convert.ToDouble(Model.TotalPercentageSpring.Value * 100)%</a>
                    </li>
                    <li class="list-group-item">
                        <b>Base annual working hours</b> <a class="pull-right">@ViewBag.BaseAnnualWorkingHours</a>
                    </li>
                </ul>
            </div>
            <!-- /.box-body -->
        </div>

        <div class="box box-danger">
            <div class="box-header with-border">
                <h3 class="box-title">Distribution of teaching hours</h3>
            </div>
            <div class="box-body">
                <div class="row">
                        <div class="chart-responsive">
                            <canvas id="pieChart" style="height:250px"></canvas>
                        </div>
                    @*<div class="col-sm-4">
                        <ul class="chart-legend clearfix">
                            <li><i class="fa fa-circle-o text-red"></i> Available Hours Fall</li>
                            <li><i class="fa fa-circle-o text-green"></i> Available Hours Spring</li>
                            <li><i class="fa fa-circle-o text-yellow"></i> Allocated Hours Fall</li>
                            <li><i class="fa fa-circle-o text-aqua"></i> Allocated Hours Spring</li>
                        </ul>
                    </div>*@
                </div><br />

                <div class="box-footer no-padding">
                    <ul class="nav nav-pills nav-stacked">
                        <li>
                            <a href="#">
                                Total available hours for spring
                                <span class="pull-right text-green">@ViewBag.TeachingHoursAvailableFall</span>
                            </a>
                        </li>
                        <li>
                            <a href="#">Allocated hours for fall<span class="pull-right text-yellow">@ViewBag.TeachingHoursAllocatedFall</span></a>
                        </li>
                        <li>
                            <a href="#">
                                Total available hours for spring
                                <span class="pull-right text-green">@ViewBag.TeachingHoursAvailableSpring</span>
                            </a>
                        </li>
                        <li>
                            <a href="#">
                                Allocated hours for spring
                                <span class="pull-right text-yellow">@ViewBag.TeachingHoursAllocatedSpring</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            <!-- /.box-body -->
        </div>

        <div class="box box-danger">
            <div class="box-header with-border">
                <h3 class="box-title">Distribution of fall working hours</h3>
            </div>
            <div class="box-body">
                <div class="row">
                        <div class="chart-responsive">
                            <canvas id="FallPieChart" style="height:250px"></canvas>
                        </div>               
                </div><br />

                <div class="box-footer">
                    <ul class="nav nav-pills nav-stacked">
                        <li>
                            <a href="#">
                                Fall teaching hours
                                <span class="pull-right text-green">@ViewBag.TotalTeachingHoursFall</span>
                            </a>
                        </li>
                        <li>
                            <a href="#">
                                Research Hours<span class="pull-right text-green">@ViewBag.TotalHoursAllocatedResearchFall</span>
                            </a>
                        </li>
                        <li>
                            <a href="#">
                                Administrative
                                <span class="pull-right text-green">@ViewBag.TotalHoursAllocatedAdministrationFall</span>
                            </a>
                        </li>
                        <li>
                            <a href="#">
                                Assignments
                                <span class="pull-right text-green">@ViewBag.TotalHoursAllocatedAssignmentsFall</span>
                            </a>
                        </li>
                        <li>
                            <a href="#">
                                Other
                                <span class="pull-right text-green">@ViewBag.TotalHoursAllocatedOtherFall</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
        
        <div class="box box-danger">
            <div class="box-header with-border">
                <h3 class="box-title">Distribution of spring working hours</h3>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="chart-responsive">
                        <canvas id="SpringPieChart" style="height:250px"></canvas>
                    </div>
                </div><br />

                <div class="box-footer">
                    <ul class="nav nav-pills nav-stacked">
                        <li>
                            <a href="#">
                                Spring teaching hours
                                <span class="pull-right text-green">@ViewBag.TotalTeachingHoursSpring</span>
                            </a>
                        </li>
                        <li>
                            <a href="#">
                                Research Hours<span class="pull-right text-green">@ViewBag.TotalHoursAllocatedResearchSpring</span>
                            </a>
                        </li>
                        <li>
                            <a href="#">
                                Administrative
                                <span class="pull-right text-green">@ViewBag.TotalHoursAllocatedAdministrationSpring</span>
                            </a>
                        </li>
                        <li>
                            <a href="#">
                                Assignments
                                <span class="pull-right text-green">@ViewBag.TotalHoursAllocatedAssignmentsSpring</span>
                            </a>
                        </li>
                        <li>
                            <a href="#">
                                Other
                                <span class="pull-right text-green">@ViewBag.TotalHoursAllocatedOtherSpring</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
            <!-- /.box-body -->
        </div>

    </div>
    <div class="col-md-8  skin-red-light">
        <div class="nav-tabs-custom  skin-red-light">
            <ul class="nav nav-tabs skin-red-light">
                <li class="active skin-red-light"><a href="#fall" data-toggle="tab">Fall Term</a></li>
                <li><a href="#spring" data-toggle="tab">Spring Term</a></li>
                <li><a href="#year" data-toggle="tab">Hours During Year</a></li>
                <li><a href="#history" data-toggle="tab">History</a></li>

            </ul>
            <div class="tab-content">
                <div class="active tab-pane" id="fall">
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="box box-danger">
                                <!-- /.box-header -->
                                <div class="box-body">
                                    <table class="table table-bordered table-hover" id="courseoverview">
                                        <thead>
                                            <tr>
                                                <th>
                                                    Course Code
                                                </th>
                                                <th>
                                                    Course Name
                                                </th>
                                                <th>
                                                    Amount of hours
                                                </th>
                                                <th>
                                                    Course responsible
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (CoursePlanner.Models.CourseOccurrence c in (List<CoursePlanner.Models.CourseOccurrence>)ViewBag.CourseOccurencesFall)
                                            {
                                                <tr>
                                                    <td>
                                                        @c.Course.CourseCode
                                                    </td>
                                                    <td>
                                                        <a href="@Url.Action("Details/" + @c.CourseID, "Course")"><span>@c.Course.CourseName</span></a>
                                                    </td>
                                                    <td>
                                                        @c.CourseTeacher.Where(x => x.CourseOccurrenceId == c.CourseOccurrenceID && x.TeacherId == Model.TeacherId).Select(y => y.Hours).FirstOrDefault()
                                                    </td>
                                                    <td></td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                                <!-- /.box-body -->
                            </div>
                            <!-- /.box -->
                        </div>
                        <!--/.col-xs-12-->
                    </div>
                </div>
                <!-- /.tab-pane -->
                <div class="tab-pane" id="spring">
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="box box-danger">
                                <!-- /.box-header -->
                                <div class="box-body">
                                    <table class="table table-bordered table-hover" id="courseoverview">
                                        <thead>
                                            <tr>
                                                <th>
                                                    Course Code
                                                </th>
                                                <th>
                                                    Course Name
                                                </th>
                                                <th>
                                                    Amount of hours
                                                </th>
                                                <th>
                                                    Course responsible
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (CoursePlanner.Models.CourseOccurrence c in (List<CoursePlanner.Models.CourseOccurrence>)ViewBag.CourseOccurencesSpring)
                                            {
                                                <tr>
                                                    <td>
                                                        @c.Course.CourseCode
                                                    </td>
                                                    <td>
                                                        <a href="@Url.Action("Details/" + @c.CourseID, "Course")"><span>@c.Course.CourseName</span></a>
                                                    </td>
                                                    <td>
                                                        @c.CourseTeacher.Where(x => x.CourseOccurrenceId == c.CourseOccurrenceID && x.TeacherId == Model.TeacherId).Select(y => y.Hours).FirstOrDefault()
                                                    </td>
                                                    <td>
                                                        <a href="@Url.Action("Details/" + @c.CourseResponsibleID, "Teacher")">
                                                            <span>
                                                                @c.CourseTeacher.Where(x => x.CourseOccurrence.CourseResponsibleID == c.CourseResponsibleID).Select(y => y.Teacher.TeacherName).FirstOrDefault()
                                                            </span>
                                                        </a>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                                <!-- /.box-body -->
                            </div>
                            <!-- /.box -->
                        </div>
                        <!--/.col-xs-12-->
                    </div>
                </div>
                <!-- /.tab-pane -->
                <div class="tab-pane" id="year">

                </div>
                <!-- /.tab-pane -->
                <div class="tab-pane" id="history">

                </div>
            </div>
            <!-- /.tab-content -->
        </div>
        <!-- /.nav-tabs-custom -->
    </div>
</div>
    <!-- /.box -->
<p>
    @Html.ActionLink("Back to List", "Index")
</p>

@section PieCharts{
    <script>
    $(document).ready(function () {

        //-------------
        //- PIE CHART -
        //-------------
        // Get context with jQuery - using jQuery's .get() method.
        var pieChartCanvas = $('#pieChart').get(0).getContext('2d')
        var pieChart = new Chart(pieChartCanvas)
        var PieData = [
            {
                value: @ViewBag.TeachingHoursAvailableFall,
                color: '#f56954',
                highlight: '#f56954',
                label: 'Available Hours Fall'
            },
            {
                value: @ViewBag.TeachingHoursAvailableSpring,
                color: '#00a65a',
                highlight: '#00a65a',
                label: 'Available Hours Spring'
            },
            {
                value: @ViewBag.TeachingHoursAllocatedFall,
                color: '#f39c12',
                highlight: '#f39c12',
                label: 'Allocated Hours Fall'
            },
            {
                value: @ViewBag.TeachingHoursAvailableFall,
                color: '#00c0ef',
                highlight: '#00c0ef',
                label: 'Allocated Hours Spring'
            }
        ]
        var pieOptions = {
            //Boolean - Whether we should show a stroke on each segment
            segmentShowStroke: true,
            //String - The colour of each segment stroke
            segmentStrokeColor: '#fff',
            //Number - The width of each segment stroke
            segmentStrokeWidth: 2,
            //Number - The percentage of the chart that we cut out of the middle
            percentageInnerCutout: 50, // This is 0 for Pie charts
            //Number - Amount of animation steps
            animationSteps: 100,
            //String - Animation easing effect
            animationEasing: 'easeOutBounce',
            //Boolean - Whether we animate the rotation of the Doughnut
            animateRotate: true,
            //Boolean - Whether we animate scaling the Doughnut from the centre
            animateScale: false,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true,
            // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //String - A legend template
            legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'
        }
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        pieChart.Doughnut(PieData, pieOptions)
    });

    $(document).ready(function () {

        //-------------
        //- PIE CHART -
        //-------------
        // Get context with jQuery - using jQuery's .get() method.
        var fallPieChartCanvas = $('#FallPieChart').get(0).getContext('2d')
        var fallpieChart = new Chart(fallPieChartCanvas)
        var fallPieData = [
            {
                value: @ViewBag.TotalTeachingHoursFall,
                color: '#f56954',
                highlight: '#f56954',
                label: 'Teaching Hours'
            },
            {
                value: @ViewBag.TotalHoursAllocatedResearchFall,
                color: '#00a65a',
                highlight: '#00a65a',
                label: 'Research'
            },
            {
                value: @ViewBag.TotalHoursAllocatedAdministrationFall,
                color: '#f39c12',
                highlight: '#f39c12',
                label: 'Administration'
            },
            {
                value: @ViewBag.TotalHoursAllocatedAssignmentsFall,
                color: '#00c0ef',
                highlight: '#00c0ef',
                label: 'Assignments'
            },
            {
                value: @ViewBag.TotalHoursAllocatedOtherFall,
                color: '#00c0ef',
                highlight: '#00c0ef',
                label: 'Other'
            }
        ]
        var fallpieOptions = {
            //Boolean - Whether we should show a stroke on each segment
            segmentShowStroke: true,
            //String - The colour of each segment stroke
            segmentStrokeColor: '#fff',
            //Number - The width of each segment stroke
            segmentStrokeWidth: 2,
            //Number - The percentage of the chart that we cut out of the middle
            percentageInnerCutout: 50, // This is 0 for Pie charts
            //Number - Amount of animation steps
            animationSteps: 100,
            //String - Animation easing effect
            animationEasing: 'easeOutBounce',
            //Boolean - Whether we animate the rotation of the Doughnut
            animateRotate: true,
            //Boolean - Whether we animate scaling the Doughnut from the centre
            animateScale: false,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true,
            // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //String - A legend template
            legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'
        }
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        fallpieChart.Doughnut(fallPieData, fallpieOptions)
    });

    $(document).ready(function () {

        //-------------
        //- PIE CHART -
        //-------------
        // Get context with jQuery - using jQuery's .get() method.
        var springPieChartCanvas = $('#SpringPieChart').get(0).getContext('2d')
        var springpieChart = new Chart(springPieChartCanvas)
        var springPieData = [
            {
                value: @ViewBag.TotalTeachingHoursSpring,
                color: '#f56954',
                highlight: '#f56954',
                label: 'Teaching Hours'
            },
            {
                value: @ViewBag.TotalHoursAllocatedResearchSpring,
                color: '#00a65a',
                highlight: '#00a65a',
                label: 'Research'
            },
            {
                value: @ViewBag.TotalHoursAllocatedAdministrationSpring,
                color: '#f39c12',
                highlight: '#f39c12',
                label: 'Administration'
            },
            {
                value: @ViewBag.TotalHoursAllocatedAssignmentsSpring,
                color: '#00c0ef',
                highlight: '#00c0ef',
                label: 'Assignments'
            },
            {
                value: @ViewBag.TotalHoursAllocatedOtherSpring,
                color: '#00c0ef',
                highlight: '#00c0ef',
                label: 'Other'
            }
        ]
        var springpieOptions = {
            //Boolean - Whether we should show a stroke on each segment
            segmentShowStroke: true,
            //String - The colour of each segment stroke
            segmentStrokeColor: '#fff',
            //Number - The width of each segment stroke
            segmentStrokeWidth: 2,
            //Number - The percentage of the chart that we cut out of the middle
            percentageInnerCutout: 50, // This is 0 for Pie charts
            //Number - Amount of animation steps
            animationSteps: 100,
            //String - Animation easing effect
            animationEasing: 'easeOutBounce',
            //Boolean - Whether we animate the rotation of the Doughnut
            animateRotate: true,
            //Boolean - Whether we animate scaling the Doughnut from the centre
            animateScale: false,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true,
            // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //String - A legend template
            legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'
        }
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        springpieChart.Doughnut(springPieData, springpieOptions)
    });

</script>
}
